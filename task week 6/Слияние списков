# Даны два списка A и B упорядоченных по неубыванию. Объедините их в один упорядоченный список С (то есть он должен содержать len(A)+len(B) элементов). Решение оформите в виде функции merge(A, B), возвращающей новый список. Алгоритм должен иметь сложность O(len(A)+len(B)). Модифицировать исходные списки запрещается. Использовать функцию sorted и метод sort запрещается.
#
# Формат ввода
#
# Программа получает на вход два неубывающих списка, каждый в отдельной строке.
#
# Формат вывода
#
# Программа должна вывести последовательность неубывающих чисел, полученных объединением двух данных списков.

a = list(map(int, input().split()))
b = list(map(int, input().split()))


def merge(A, B):
    cl = []
    i, j = 0, 0
    for k in range(len(A) + len(B)):
        if i < len(A) and j < len(B):
            if A[i] < B[j]:
                cl.append(A[i])
                i += 1
            else:
                cl.append(B[j])
                j += 1
        elif i < len(A):
            cl.append(A[i])
            i += 1
        elif j < len(B):
            cl.append(B[j])
            j += 1
    return cl


print(*merge(a, b))
